{"version":3,"sources":["images/AtanasovLogoWhite.png","images/logo.png","hooks/useToggle.js","components/LoginSignup/Login.js","components/LoginSignup/Signup.js","hooks/useInputControl.js","context/Context.js","components/Flash/Flash.js","components/LoginSignup/ForgottenPassword.js","components/LoginSignup/LoginSignup.js","functions/isEmail.js","components/Home/Card.js","components/Home/InvoicesTableHeader.js","components/Home/InvoicesTableRow.js","Loader.js","components/Home/Home.js","functions/calculateTotal.js","components/Invoice/Row.js","components/Invoice/Header.js","components/Invoice/Footer.js","components/Invoice/InvoiceTable.js","components/Invoice/ClientAndInvoiceInfo.js","components/Invoice/CompanyInfo.js","functions/areRowsCalculated.js","components/Invoice/Invoice.js","functions/logout.js","components/Verification/Verification.js","components/Settings/CompanyInfo.js","components/Settings/UserSettings.js","components/Settings/Settings.js","components/PageFooter.js","components/UsagePolicy/UsagePolicy.js","components/404/ErrorPage.js","components/NavBar.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","useToggle","initialValue","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","value","setValue","Login","_ref","email","password","login","register","setLoginPassword","setLoginEmail","setIsForgottenPassword","inputStyle","margin","width","height","_useToggle","_useToggle2","isPasswordVisible","setIsPasswordVisible","cursorPointer","cursor","react_default","a","createElement","className","AccountCircle_default","style","borderRadius","boxShadow","backgroundColor","Typography","variant","fontSize","TextField","label","onChange","InputProps","startAdornment","InputAdornment","position","Email_default","type","VisibilityOff_default","onClick","RemoveRedEye_default","Button","Link","underline","iconStyle","Signup","setEmail","password1","setPassword1","password2","setPassword2","isPassword1Visible","setIsPassword1Visible","_useToggle3","_useToggle4","isPassword2Visible","setIsPassword2Visible","useInputControl","setItem","e","target","Context","createContext","Flash","msg","padding","Alert","sx","severity","ForgottenPassword","back","submit","isSubmited","setIsSubmited","setCode","code","changePassword","Fragment","disabled","helperText","LoginSignup","flash","isOn","flashPopUp","useContext","isLoggingIn","setIsLoggingIn","isForgottenPassword","_useInputControl","_useInputControl2","_useInputControl3","_useInputControl4","_useInputControl5","_useInputControl6","_useToggle5","_useToggle6","submited","setSubmited","_useInputControl7","_useInputControl8","fixedEmail","trim","toLowerCase","axios","post","then","res","data","catch","response","concat","username","window","location","reload","test","isEmail","Card","cardFor","number","textAlign","paddingTop","InvoicesTableHeader","InvoicesTableRow","id","client","paymentDate","priceWithoutVAT","VAT","total","payed","changePaymentStatus","deleteInvoice","navigate","useNavigate","IconButton","ManageSearchSharp_default","parseInt","toFixed","handlechangePaymentStatus","HighlightOffSharp_default","CheckCircleOutlineSharp_default","handleDeleteInvoice","DeleteSharp_default","Loader","Home","invoices","setInvoices","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","unpayedInvoices","setUnpayedInvoices","_useState7","_useState8","totalVAT","setTotalVAT","_useState9","_useState10","totalUnpayed","setTotalUnpayed","_useState11","_useState12","totalPayed","setTotalPayed","_useState13","_useState14","totalWithoutVAT","setTotalWithoutVAT","dateFns","DateFnsAdapter","useEffect","get","allTotals","invoice","map","reduce","pre","cur","filter","unpayed","calculateTotal","asyncToGenerator","regenerator_default","mark","_callee","invoiceId","wrap","_context","prev","next","_id","objectSpread","isPayed","stop","_x","apply","this","_ref2","_callee2","_context2","_x2","Loader_Loader","key","clientInfo","name","format","Date","parse","invoiceInfo","Row","plusTotal","minusTotal","rowRemove","rowNum","_ref$dbItem","dbItem","_ref$dbMeasurment","dbMeasurment","_ref$dbPrice","dbPrice","_ref$dbQuantity","dbQuantity","_ref$dbVAT","dbVAT","item","measurment","setMeasurment","price","setPrice","quantity","setQuantity","_useInputControl9","_useInputControl10","setVAT","isEditing","setEditing","setPriceWithoutVAT","setTotal","_useContext","getRowData","removeRowData","isRowEditing","isRowDeleted","CheckSharp_default","EditSharp_default","handleRowRemove","Header","Footer","allTotal","addRow","resetRows","RefreshSharp_default","AddCircleOutlineSharp_default","InvoiceTable","getAllTotals","products","setRowsStatus","setAllTotal","allTotalVAT","setAllTotalVAT","allTotalWithoutVAT","setAllTotalWithoutVAT","oneRow","setRows","uuidv4","rows","toConsumableArray","props","inx","dbIsEditing","Footer_Footer","ClientAndInvoiceInfo","getClientAndInvoiceData","fetchedInvoiceData","day","anotherDay","defaultPaymentDay","setDate","getDate","clientName","setClientName","address","setAddress","tel","setTel","invoiceNumber","setInvoiceNumber","toLocaleDateString","dateOfExecution","setDateOfExecution","dateOfIssuing","setDateOfIssuing","_useState15","_useState16","setPaymentDate","_useState17","_useState18","savedClients","setSavedClients","selectedClient","_fetchedInvoiceData$c","_fetchedInvoiceData$i","executionDate","issuingDate","clientInfoInputStyle","invoiceInfoInputStyle","Autocomplete","val","freeSolo","disableClearable","options","size","renderInput","params","assign","placeholder","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDatePicker","inputFormat","CompanyInfo","companyInfo","telephone","mail","bankAcc","tax","logo","companyName","setCompanyName","companyAddress","setCompanycompanyAddress","IBAN","setIBAN","_useInputControl11","_useInputControl12","taxNumber","setTaxNumber","src","alt","areRowsCalculated","rowsStatus","stillEditing","state","Invoice","user","useParams","fetchedProductsData","setFetchedProductsData","setFetchedInvoiceData","allRowsData","setAllRowsData","clientAndInvoiceData","setClientAndInvoiceData","setAllTotals","saveNewInvoice","saveEditedInvoice","_ref3","_callee3","_context3","getSavedInvoice","bankAccount","path","context_Context","Provider","rowData","rowId","rowState","CompanyInfo_CompanyInfo","ClientAndInvoiceInfo_ClientAndInvoiceInfo","InvoiceTable_InvoiceTable","color","endIcon","SaveOutlined_default","print","Print_default","logout","Verification","align","inputsStyle","setBankAccount","image","setImage","fullWidth","files","encType","modalStyle","top","left","transform","bgcolor","border","modalBtnsStyle","display","flexDirection","justifyContent","paddingBottom","UserSettings","changeEmail","deleteUser","passConfirmModal","setPassConfirmModal","emailConfirmModal","setEmailConfirmModal","isOldPasswordVisible","setIsOldPasswordVisible","_useToggle7","_useToggle8","_useToggle9","_useToggle10","oldPassword","setOldPassword","Modal","open","Box","Settings","isItInfo","setIsItInfo","changeUserData","ButtonGroup","aria-label","Settings_CompanyInfo_CompanyInfo","img","headers","content-type","reponse","oldPass","newPass","newEmail","PageFooter","textDecoration","href","varian","AtanasovLogo","component","NavLink","to","UsagePolicy","textStyle","alignItems","ErrorPage","NavBar","btnStyle","anchorEl","setAnchorEl","Boolean","handleClose","react_router_dom","Menu_default","aria-controls","aria-haspopup","aria-expanded","event","currentTarget","Menu_Menu","onClose","MenuListProps","aria-labelledby","MenuItem","ListItemIcon","ReceiptSharp_default","ListItemText","PostAddSharp_default","AccountCircleSharp_default","ExitToAppSharp_default","startIcon","noWrap","Avatar","react_router","element","Home_Home","Invoice_Invoice","Settings_Settings","LoginSignup_LoginSignup","Verification_Verification","ErrorPage_ErrorPage","PageFooter_PageFooter","App","status","isUserDataUpdated","setIsUserDataUpdated","flashIsOnTypeMsg","setFlash","useCallback","setTimeout","isAuthenticated","setIsAuthenticated","setUser","_fetchUserStatusAndData","fetchUserStatusAndData","verified","NavBar_NavBar","isVerified","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.966896fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AtanasovLogoWhite.cf901960.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9682c3b2.png\";","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue = false) {\r\n     const [value, setValue] = useState(initialValue)\r\n     const toggle = () => {\r\n          setValue(!value)\r\n     }\r\n     return [value, toggle]\r\n}","import React from \"react\";\r\nimport { TextField, Button, Link, Typography, InputAdornment } from \"@mui/material\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport useToggle from \"../../hooks/useToggle\";\r\n\r\nexport default function Login({ email, password, login, register, setLoginPassword, setLoginEmail, setIsForgottenPassword }) {\r\n     const inputStyle = {\r\n          margin: \"5px\",\r\n          width: \"100%\",\r\n          height: \"30%\"\r\n     }\r\n     const iconStyle = {\r\n          height: \"80px\",\r\n          width: \"80px\",\r\n          borderRadius: \"100%\",\r\n          boxShadow: \"1px 1px 10px -3px black\",\r\n          margin: \"10px\",\r\n          backgroundColor: \"white\"\r\n\r\n     }\r\n     const [isPasswordVisible, setIsPasswordVisible] = useToggle(false)\r\n     const cursorPointer = { cursor: \"pointer\" }\r\n\r\n     return (\r\n          <div className=\"Login\">\r\n               <div className=\"Icon\">\r\n                    <AccountCircleIcon style={iconStyle} />\r\n               </div>\r\n               <div className=\"Inputs\">\r\n                    <Typography variant=\"button\" fontSize={\"1rem\"}>Логирај се</Typography>\r\n                    <TextField\r\n                         style={inputStyle}\r\n                         label=\"Е-маил\"\r\n                         variant=\"outlined\"\r\n                         value={email}\r\n                         onChange={setLoginEmail}\r\n                         InputProps={{\r\n                              startAdornment:\r\n                                   <InputAdornment position=\"start\">\r\n                                        <EmailIcon />\r\n                                   </InputAdornment>\r\n                         }}\r\n                    />\r\n                    <TextField style={inputStyle}\r\n                         label=\"Лозинка\"\r\n                         variant=\"outlined\"\r\n                         type={isPasswordVisible ? \"text\" : \"password\"}\r\n                         value={password}\r\n                         onChange={setLoginPassword}\r\n                         InputProps={{\r\n                              startAdornment:\r\n                                   <InputAdornment position=\"start\">\r\n                                        {isPasswordVisible ?\r\n                                             <VisibilityOffIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPasswordVisible}\r\n                                             />\r\n                                             :\r\n                                             <RemoveRedEyeIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPasswordVisible}\r\n                                             />\r\n                                        }\r\n                                   </InputAdornment>,\r\n                         }}\r\n                    />\r\n                    <Button style={inputStyle} variant=\"contained\"\r\n                         onClick={login}>Логирај се</Button>\r\n                    <Link className=\"Link\" onClick={register} underline=\"none\">\r\n                         {'Регистрирај се'}\r\n                    </Link>\r\n                    <Link className=\"Link\"\r\n                         onClick={setIsForgottenPassword}\r\n                         underline=\"none\">\r\n                         {'Заборавена лозинка'}\r\n                    </Link>\r\n               </div>\r\n          </div >\r\n     )\r\n}","import React from \"react\";\r\nimport { TextField, Button, Link, Typography, InputAdornment } from \"@mui/material\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport useToggle from \"../../hooks/useToggle\";\r\n\r\nconst inputStyle = {\r\n     margin: \"5px\",\r\n     width: \"100%\",\r\n     height: \"30%\"\r\n}\r\nconst iconStyle = {\r\n     height: \"80px\",\r\n     width: \"80px\",\r\n     borderRadius: \"100%\",\r\n     boxShadow: \"1px 1px 10px -3px black\",\r\n     margin: \"10px\",\r\n     backgroundColor: \"white\"\r\n\r\n}\r\nconst cursorPointer = { cursor: \"pointer\" }\r\nexport default function Signup({ email, setEmail, password1, setPassword1, password2, setPassword2, register, login }) {\r\n     const [isPassword1Visible, setIsPassword1Visible] = useToggle(false)\r\n     const [isPassword2Visible, setIsPassword2Visible] = useToggle(false)\r\n     return (\r\n          <div className=\"Login\">\r\n               <div className=\"Icon\">\r\n                    <AccountCircleIcon style={iconStyle} />\r\n               </div>\r\n               <div className=\"Inputs\">\r\n                    <Typography variant=\"button\" fontSize={\"1rem\"}>Регистрирај се</Typography>\r\n                    <TextField\r\n                         style={inputStyle}\r\n                         label=\"Е-маил\"\r\n                         type=\"email\"\r\n                         variant=\"outlined\"\r\n                         value={email}\r\n                         onChange={setEmail}\r\n                         InputProps={{\r\n                              startAdornment:\r\n                                   <InputAdornment position=\"start\">\r\n                                        <EmailIcon />\r\n                                   </InputAdornment>\r\n\r\n                         }}\r\n                    />\r\n                    <TextField\r\n                         style={inputStyle}\r\n                         label=\"Лозинка\"\r\n                         variant=\"outlined\"\r\n                         type={isPassword1Visible ? \"text\" : \"password\"}\r\n                         value={password1}\r\n                         onChange={setPassword1}\r\n                         InputProps={{\r\n                              startAdornment:\r\n                                   <InputAdornment position=\"start\">\r\n                                        {isPassword1Visible ?\r\n                                             <VisibilityOffIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPassword1Visible}\r\n                                             />\r\n                                             :\r\n                                             <RemoveRedEyeIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPassword1Visible}\r\n                                             />\r\n                                        }\r\n                                   </InputAdornment>\r\n\r\n                         }}\r\n                    />\r\n                    <TextField\r\n                         style={inputStyle}\r\n                         label=\"Повтори лозинка\"\r\n                         variant=\"outlined\"\r\n                         type={isPassword2Visible ? \"text\" : \"password\"}\r\n                         value={password2}\r\n                         onChange={setPassword2}\r\n                         InputProps={{\r\n                              startAdornment:\r\n                                   <InputAdornment position=\"start\">\r\n                                        {isPassword2Visible ?\r\n                                             <VisibilityOffIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPassword2Visible}\r\n                                             />\r\n                                             :\r\n                                             <RemoveRedEyeIcon\r\n                                                  style={cursorPointer}\r\n                                                  onClick={setIsPassword2Visible}\r\n                                             />\r\n                                        }\r\n                                   </InputAdornment>\r\n\r\n                         }}\r\n                    />\r\n\r\n                    <Button style={inputStyle} variant=\"contained\" onClick={register}>Регистрирај се</Button>\r\n                    <Link className=\"Link\" onClick={login} underline=\"none\">\r\n                         {'Логирај се'}\r\n                    </Link>\r\n               </div>\r\n          </div>\r\n     )\r\n}","import { useState } from \"react\";\r\n\r\nexport default function useInputControl(initialValue) {\r\n     const [value, setItem] = useState(initialValue)\r\n     const handleChange = (e) => {\r\n          setItem(e.target.value)\r\n     }\r\n     return [value, handleChange]\r\n}","import { createContext } from \"react\";\r\n\r\nconst Context = createContext({})\r\n\r\nexport default Context","import React from \"react\";\r\nimport { Alert } from \"@mui/material\";\r\nexport default function Flash({ type, msg }) {\r\n     return (\r\n          <div className=\"Flash\" style={{ padding: \"0\" }}>\r\n               <Alert sx={{ width: '80%' }} severity={type}>{msg}</Alert>\r\n          </div>\r\n     )\r\n}\r\n\r\n//Flash styling is done in Navbar.css & LoginSignup.css and the component is shown in both of those components Navbar & LoginSignup.","import React from \"react\";\r\nimport { TextField, Button, Link, Typography, InputAdornment } from \"@mui/material\";\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport useToggle from \"../../hooks/useToggle\";\r\nconst inputStyle = {\r\n     margin: \"5px\",\r\n     width: \"100%\",\r\n     height: \"30%\"\r\n}\r\nconst cursorPointer = { cursor: \"pointer\" }\r\nexport default function ForgottenPassword({ setEmail, back, submit, isSubmited, setIsSubmited, setPassword1, setPassword2, password1, password2, email, setCode, code, changePassword }) {\r\n\r\n     const [isPassword1Visible, setIsPassword1Visible] = useToggle(false)\r\n     const [isPassword2Visible, setIsPassword2Visible] = useToggle(false)\r\n     return (\r\n          <div className=\"Form\">\r\n               <div className=\"Inputs\">\r\n                    <Typography variant=\"button\" fontSize={\"1rem\"}>Заборавена лозинка</Typography>\r\n                    {isSubmited ?\r\n                         <>\r\n                              <TextField disabled style={inputStyle} label=\"Вашиот емаил\" type=\"text\" value={email} variant=\"outlined\"\r\n                              />\r\n                              <TextField style={inputStyle} label=\"Код\" type=\"text\" variant=\"outlined\" onChange={setCode}\r\n                                   value={code}\r\n                                   helperText=\"Внесете го кодот што го добивте во емаил\"\r\n                              />\r\n                              <TextField\r\n                                   style={inputStyle}\r\n                                   label=\"Внесете ја новата лозинка\"\r\n                                   type={isPassword1Visible ? \"text\" : \"password\"}\r\n                                   variant=\"outlined\"\r\n                                   onChange={setPassword1}\r\n                                   value={password1}\r\n                                   InputProps={{\r\n                                        startAdornment:\r\n                                             <InputAdornment position=\"start\">\r\n                                                  {isPassword1Visible ?\r\n                                                       <VisibilityOffIcon\r\n                                                            style={cursorPointer}\r\n                                                            onClick={setIsPassword1Visible}\r\n                                                       />\r\n                                                       :\r\n                                                       <RemoveRedEyeIcon\r\n                                                            style={cursorPointer}\r\n                                                            onClick={setIsPassword1Visible}\r\n                                                       />\r\n                                                  }\r\n                                             </InputAdornment>\r\n\r\n                                   }}\r\n                              />\r\n                              <TextField\r\n                                   style={inputStyle}\r\n                                   label=\"Повторете ја новата лозинка\"\r\n                                   type={isPassword2Visible ? \"text\" : \"password\"}\r\n                                   variant=\"outlined\"\r\n                                   onChange={setPassword2}\r\n                                   value={password2}\r\n                                   InputProps={{\r\n                                        startAdornment:\r\n                                             <InputAdornment position=\"start\">\r\n                                                  {isPassword2Visible ?\r\n                                                       <VisibilityOffIcon\r\n                                                            style={cursorPointer}\r\n                                                            onClick={setIsPassword2Visible}\r\n                                                       />\r\n                                                       :\r\n                                                       <RemoveRedEyeIcon\r\n                                                            style={cursorPointer}\r\n                                                            onClick={setIsPassword2Visible}\r\n                                                       />\r\n                                                  }\r\n                                             </InputAdornment>\r\n\r\n                                   }}\r\n                              />\r\n                              <Button style={inputStyle} variant=\"contained\" onClick={changePassword} >Потврди</Button>\r\n                              <Link className=\"Link\" underline=\"none\" onClick={setIsSubmited}>\r\n                                   {'Назад'}\r\n                              </Link>\r\n                         </>\r\n                         :\r\n                         <>\r\n                              <TextField style={inputStyle} label=\"Внесете го вашиот емаил\" type=\"text\" variant=\"outlined\" onChange={setEmail} value={email}\r\n                              />\r\n                              <Button style={inputStyle} variant=\"contained\" onClick={submit} >Потврди</Button>\r\n                              <Link className=\"Link\" underline=\"none\" onClick={back}>\r\n                                   {'Назад'}\r\n                              </Link>\r\n                         </>\r\n                    }\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React, { useContext } from \"react\";\r\nimport \"../../style/LoginSignup.css\"\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport useInputControl from \"../../hooks/useInputControl\";\r\nimport axios from \"axios\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport Context from \"../../context/Context\";\r\nimport Flash from \"../Flash/Flash\";\r\nimport isEmail from \"../../functions/isEmail\";\r\nimport ForgottenPassword from \"./ForgottenPassword\";\r\nexport default function LoginSignup({ flash }) {\r\n     const { isOn, type, msg } = flash\r\n     const { flashPopUp } = useContext(Context)\r\n     const [isLoggingIn, setIsLoggingIn] = useToggle(true)\r\n     const [isForgottenPassword, setIsForgottenPassword] = useToggle(false)\r\n     const [email, setEmail] = useInputControl(\"\")\r\n     const [password1, setPassword1] = useInputControl(\"\")\r\n     const [password2, setPassword2] = useInputControl(\"\")\r\n\r\n     //Forgoten Password\r\n     const [submited, setSubmited] = useToggle(false)\r\n\r\n     const sendCodeForChangePassword = () => {\r\n          const fixedEmail = email.trim().toLowerCase()\r\n          axios.post(\"/api/changepassword\", { email: fixedEmail })\r\n               .then(res => flashPopUp(\"success\", res.data.msg))\r\n               .catch(e => flashPopUp(\"success\", e.response.data.msg))\r\n          setSubmited()\r\n     }\r\n\r\n     //Change password\r\n     const [code, setCode] = useInputControl(\"\")\r\n     const changePassword = () => {\r\n          const fixedEmail = email.trim().toLowerCase()\r\n          const data = { password1: password1, password2: password2, email: fixedEmail, code: code }\r\n          axios.post(`/api/changepassword/${code}`, data)\r\n               .then(res => flashPopUp(\"success\", res.data.msg))\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n          setSubmited()\r\n          setIsForgottenPassword()\r\n     }\r\n     //Registration\r\n\r\n     const register = () => {\r\n          const fixedEmail = email.trim().toLowerCase()\r\n          const data = { password1, password2, email: fixedEmail }\r\n          if (isEmail(email)) {\r\n               axios.post(\"/api/signup\", data)\r\n                    .then((res) => {\r\n                         flashPopUp(\"success\", res.data.msg)\r\n                         setIsLoggingIn(true)\r\n                    })\r\n                    .catch((e) => {\r\n                         if (e.response.data.code === 11000) {\r\n                              flashPopUp(\"error\", \"Корисник со истиот емаил веќе постои, ве молиме логирајте се\")\r\n                         } else {\r\n                              flashPopUp(\"error\", e.response.data.msg)\r\n                         }\r\n                    })\r\n          } else {\r\n               flashPopUp(\"error\", \"Ве молиме внесете валидна емаил аддреса\")\r\n          }\r\n     }\r\n\r\n     //Login\r\n     const login = () => {\r\n          const fixedEmail = email.trim().toLowerCase()\r\n          const data = { username: fixedEmail, password: password1 }\r\n          axios.post(\"/api/login\", data)\r\n               .then((res) => {\r\n                    flashPopUp(\"success\", res.data.msg)\r\n                    window.location.reload()\r\n               })\r\n               .catch(e => flashPopUp(\"error\", \"Погрешен емаил или лозинка\"))\r\n     }\r\n\r\n     return (\r\n          <div className=\"LoginSignup\">\r\n               <div className=\"Flash\">\r\n                    {isOn &&\r\n\r\n                         <Flash type={type} msg={msg} />\r\n                    }\r\n               </div>\r\n               {isForgottenPassword ?\r\n                    <ForgottenPassword\r\n                         email={email}\r\n                         setEmail={setEmail}\r\n                         back={setIsForgottenPassword}\r\n                         submit={sendCodeForChangePassword} isSubmited={submited}\r\n                         setIsSubmited={setSubmited}\r\n                         changePassword={changePassword}\r\n                         setPassword1={setPassword1}\r\n                         setPassword2={setPassword2}\r\n                         password1={password1}\r\n                         password2={password2}\r\n                         code={code}\r\n                         setCode={setCode}\r\n\r\n                    />\r\n                    :\r\n                    <>\r\n                         {isLoggingIn ?\r\n                              <React.Fragment>\r\n                                   <Login\r\n                                        email={email}\r\n                                        password={password1}\r\n                                        login={login}\r\n                                        register={setIsLoggingIn}\r\n                                        setLoginEmail={setEmail}\r\n                                        setLoginPassword={setPassword1}\r\n                                        setIsForgottenPassword={setIsForgottenPassword}\r\n                                   />\r\n                              </React.Fragment>\r\n                              :\r\n                              <React.Fragment>\r\n\r\n                                   <Signup password1={password1} setPassword1={setPassword1} password2={password2} setPassword2={setPassword2} email={email}\r\n                                        setEmail={setEmail} register={register}\r\n                                        login={setIsLoggingIn} />\r\n                              </React.Fragment>\r\n                         }\r\n                    </>\r\n               }\r\n          </div>\r\n     )\r\n}","export default function isEmail(email) {\r\n     const isEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\r\n     return isEmail.test(email)\r\n}","import React from \"react\";\r\nexport default function Card({ cardFor, number }) {\r\n     return (\r\n          <div className=\"Card\">\r\n               <span\r\n                    style={{\r\n                         // fontSize: \"1em\",\r\n                         textAlign: \"center\"\r\n                    }}>{cardFor}</span>\r\n               <span\r\n                    style={{\r\n                         paddingTop: \"15px\",\r\n                         // fontSize: \"1em\"\r\n                    }}>{number}</span>\r\n          </div>\r\n     )\r\n}","import React from \"react\"\r\n\r\nexport default function InvoicesTableHeader() {\r\n     return (\r\n          <div className=\"InvoiceRow HeaderRow\">\r\n               <div className=\"td seeInvoice\"></div>\r\n               <div className=\"td client\">Клиент</div>\r\n               <div className=\"td paymentDate\">Рок за плаќање</div>\r\n               <div className=\"td priceWithoutVAT\">Цена без ДДВ</div>\r\n               <div className=\"td VAT\">ДДВ</div>\r\n               <div className=\"td total\">Вредност на фактурата</div>\r\n               <div className=\"td payed\"></div>\r\n               <div className=\"td delete\"></div>\r\n          </div >\r\n     )\r\n}","import React from \"react\"\r\nimport ManageSearchSharpIcon from '@mui/icons-material/ManageSearchSharp';\r\nimport DeleteSharpIcon from '@mui/icons-material/DeleteSharp';\r\nimport CheckCircleOutlineSharpIcon from '@mui/icons-material/CheckCircleOutlineSharp';\r\nimport HighlightOffSharpIcon from '@mui/icons-material/HighlightOffSharp';\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function InvoicesTableRow({ id, client, paymentDate, priceWithoutVAT, VAT, total, payed, changePaymentStatus, deleteInvoice }) {\r\n     let payedStyle = { backgroundColor: \"#aeff78\" }\r\n     let unpayedStyle = { backgroundColor: \"#fc5151\" }\r\n\r\n\r\n     const handlechangePaymentStatus = (id) => {\r\n          return () => {\r\n               changePaymentStatus(id)\r\n          }\r\n     }\r\n     const handleDeleteInvoice = (id) => {\r\n          return () => {\r\n               deleteInvoice(id)\r\n          }\r\n     }\r\n     let navigate = useNavigate()\r\n     const handleRouteChange = () => {\r\n          navigate(`/invoice/${id}`)\r\n     }\r\n\r\n     return (\r\n          <div className=\"InvoiceRow TableDataRow\" style={payed ? payedStyle : unpayedStyle} >\r\n               <div className=\"td seeInvoice borderOnDesktop\"><IconButton onClick={handleRouteChange}><ManageSearchSharpIcon /></IconButton></div>\r\n               <div className=\"td client borderOnDesktop\">{client}</div>\r\n               <div className=\"td paymentDate borderOnDesktop\">{paymentDate}</div>\r\n               <div className=\"td priceWithoutVAT borderOnDesktop\">{parseInt(priceWithoutVAT).toFixed(1)}</div>\r\n               <div className=\"td VAT borderOnDesktop\">{parseInt(VAT).toFixed(1)}</div>\r\n               <div className=\"td total borderOnDesktop\">{parseInt(total).toFixed(1)}</div>\r\n               <div className=\"td payed borderOnDesktop\">\r\n                    <IconButton onClick={handlechangePaymentStatus(id)}>\r\n                         {payed ? <HighlightOffSharpIcon /> : <CheckCircleOutlineSharpIcon />}\r\n                    </IconButton>\r\n               </div>\r\n               <div className=\"td delete\">\r\n                    <IconButton onClick={handleDeleteInvoice(id)}>\r\n                         <DeleteSharpIcon />\r\n                    </IconButton>\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React from \"react\";\r\nimport \"./Loader.css\"\r\nexport default function Loader() {\r\n     return (\r\n\r\n          <div className=\"Loader\">\r\n               <div className=\"circle\"></div>\r\n               <div className=\"circle\"></div>\r\n               <div className=\"circle\"></div>\r\n               <div className=\"circle\"></div>\r\n               <div className=\"circle\"></div>\r\n          </div>\r\n     )\r\n}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Home.css\"\r\nimport InvoicesTableHeader from \"./InvoicesTableHeader\";\r\nimport InvoicesTableRow from \"./InvoicesTableRow\";\r\nimport axios from \"axios\"\r\nimport calculateTotal from \"../../functions/calculateTotal\";\r\nimport Loader from \"../../Loader\"\r\nimport Context from \"../../context/Context\";\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nexport default function Home() {\r\n     const { flashPopUp } = useContext(Context)\r\n     const [invoices, setInvoices] = useState([])\r\n     const [isLoading, setIsLoading] = useState(true)\r\n     const [unpayedInvoices, setUnpayedInvoices] = useState(0)\r\n     const [totalVAT, setTotalVAT] = useState(0)\r\n     const [totalUnpayed, setTotalUnpayed] = useState(0)\r\n     const [totalPayed, setTotalPayed] = useState(0)\r\n     const [totalWithoutVAT, setTotalWithoutVAT] = useState(0)\r\n\r\n     const dateFns = new DateFnsAdapter()\r\n\r\n     useEffect(() => {\r\n          axios.get(\"/api/allinvoices\")\r\n               .then(res => {\r\n                    setInvoices(res.data)\r\n                    setIsLoading()\r\n               })\r\n               .catch(e => {\r\n                    flashPopUp(\"warning\", e.response.data.msg)\r\n                    setIsLoading()\r\n               })\r\n\r\n     }, [])\r\n     useEffect(() => {\r\n          const allTotals = calculateTotal(invoices, \"totalVAT\")\r\n          const { totalVAT, totalUnpayed, unpayed, totalPayed, totalWithoutVAT } = allTotals\r\n          setTotalVAT(totalVAT)\r\n          setTotalUnpayed(totalUnpayed)\r\n          setUnpayedInvoices(unpayed)\r\n          setTotalWithoutVAT(totalWithoutVAT)\r\n          setTotalPayed(totalPayed)\r\n\r\n     }, [invoices])\r\n     const changePaymentStatus = async (id) => {\r\n          const invoiceId = { id: id }\r\n          axios.post(\"/api/invoicepayed\", invoiceId)\r\n               .then(res => {\r\n                    setInvoices(invoices.map(e => e._id === id ? { ...e, payed: res.data.isPayed } : e))\r\n                    flashPopUp(\"success\", res.data.msg)\r\n               })\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n\r\n     }\r\n     const deleteInvoice = async (id) => {\r\n          const invoiceId = { id: id }\r\n          axios.post(\"/api/deleteinvoice\", invoiceId)\r\n               .then(res => {\r\n                    setInvoices(invoices.filter(e => e._id !== id))\r\n                    flashPopUp(\"success\", res.data.msg)\r\n               })\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n     return (\r\n          <div className=\"Home\">\r\n               {!isLoading ?\r\n                    <React.Fragment>\r\n                         <div className=\"Cards\">\r\n                              <Card className=\"Cards\" cardFor={\"Ненаплатени фактури\"} number={unpayedInvoices} />\r\n                              <Card className=\"Cards\" cardFor={\"Данок\"} number={totalVAT} />\r\n                              <Card className=\"Cards\" cardFor={\"За наплата\"} number={totalUnpayed} />\r\n                              <Card className=\"Cards\" cardFor={\"Наплатено\"} number={totalPayed} />\r\n                              <Card className=\"Cards\" cardFor={\"Профит\"} number={totalWithoutVAT} />\r\n                         </div>\r\n\r\n                         <div className=\"InvoicesTable\">\r\n                              <div className=\"DesktopHeader\">\r\n                                   <InvoicesTableHeader />\r\n                              </div>\r\n\r\n                              {invoices.map(e =>\r\n\r\n                                   <>\r\n                                        <div className=\"HeaderAndTableRowsForSmallScreen\">\r\n                                             <div className=\"SmallScreenHeader\">\r\n                                                  <InvoicesTableHeader />\r\n                                             </div>\r\n                                             < InvoicesTableRow id={e._id} key={e._id}\r\n                                                  client={e.clientInfo && e.clientInfo.name}\r\n                                                  paymentDate={dateFns.format(Date.parse(e.invoiceInfo.paymentDate), \"keyboardDate\")}\r\n                                                  priceWithoutVAT={e.total.totalWithoutVAT}\r\n                                                  VAT={e.total.totalVAT} total={e.total.total} payed={e.payed} changePaymentStatus={changePaymentStatus} deleteInvoice={deleteInvoice} />\r\n                                        </div>\r\n                                   </>\r\n\r\n                              )}\r\n                         </div>\r\n                    </React.Fragment>\r\n\r\n                    :\r\n                    <Loader />\r\n               }\r\n          </div>\r\n     )\r\n}","export default function calculateTotal(invoice) {\r\n     const totalVAT = invoice.map(e => e.total.totalVAT).reduce((pre, cur) => parseInt(pre) + parseInt(cur), 0)\r\n     const totalWithoutVAT = invoice.map(e => e.total.totalWithoutVAT).reduce((pre, cur) => parseInt(pre) + parseInt(cur), 0)\r\n     const totalUnpayed = invoice.filter(e => !e.payed).map(e => e.total.total).reduce((pre, cur) => parseInt(pre) + parseInt(cur), 0)\r\n     const totalPayed = invoice.filter(e => e.payed === true).map(e => e.total.total).reduce((pre, cur) => parseInt(pre) + parseInt(cur), 0)\r\n     const unpayed = invoice.filter(e => !e.payed).length\r\n     return { totalVAT, totalUnpayed, unpayed, totalPayed, totalWithoutVAT }\r\n}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../../style/Header&Row.css\"\r\nimport useInputControl from \"../../hooks/useInputControl\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport EditSharpIcon from '@mui/icons-material/EditSharp';\r\nimport DeleteSharpIcon from '@mui/icons-material/DeleteSharp';\r\nimport useToggle from \"../../hooks/useToggle\"\r\nimport CheckSharpIcon from '@mui/icons-material/CheckSharp';\r\nimport Context from \"../../context/Context\";\r\n\r\nexport default function Row({ plusTotal, id, minusTotal, rowRemove, rowNum,\r\n     dbItem = \"\",\r\n     dbMeasurment = \"\",\r\n     dbPrice = \"\",\r\n     dbQuantity = \"\",\r\n     dbVAT = \"\",\r\n}) {\r\n\r\n     const [item, setItem] = useInputControl(dbItem)\r\n     const [measurment, setMeasurment] = useInputControl(dbMeasurment)\r\n     const [price, setPrice] = useInputControl(dbPrice)\r\n     const [quantity, setQuantity] = useInputControl(dbQuantity)\r\n     const [VAT, setVAT] = useInputControl(dbVAT)\r\n     const [isEditing, setEditing] = useToggle(true)\r\n     const [priceWithoutVAT, setPriceWithoutVAT] = useState(0)\r\n     const [totalVAT, setTotalVAT] = useState(0)\r\n     const [total, setTotal] = useState(0)\r\n     const { getRowData, removeRowData, isRowEditing, isRowDeleted } = useContext(Context)\r\n\r\n     const calculate = () => {\r\n          if (isEditing) {\r\n               setPriceWithoutVAT((quantity * price))\r\n               setTotalVAT((((price / 100) * VAT) * quantity))\r\n               setTotal((((price / 100) * VAT) * quantity) + (quantity * price))\r\n               setEditing()\r\n               plusTotal((((price / 100) * VAT) * quantity) + (quantity * price), ((((price / 100) * VAT) * quantity)), (quantity * price))\r\n\r\n               const data =\r\n               {\r\n                    id: id,\r\n                    item: item,\r\n                    measurment: measurment,\r\n                    price: price,\r\n                    quantity: quantity,\r\n                    VAT: VAT,\r\n               }\r\n\r\n               getRowData(data, isEditing)\r\n\r\n          } else if (!isEditing) {\r\n               setEditing()\r\n               setPriceWithoutVAT(0)\r\n               setTotalVAT(0)\r\n               setTotal(0)\r\n               removeRowData(id)\r\n               minusTotal(total, totalVAT, priceWithoutVAT)\r\n          }\r\n     }\r\n\r\n     const handleRowRemove = (id) => {\r\n          return () => {\r\n               isRowDeleted(id)\r\n               rowRemove(id)\r\n               minusTotal(total, totalVAT, priceWithoutVAT)\r\n          }\r\n     }\r\n\r\n     useEffect(() => {\r\n          isRowEditing(isEditing, id)\r\n     }, [isEditing])\r\n     return (\r\n          <div className=\"Row\" key={id}>\r\n               <div className=\"td rowNum\">{rowNum}</div>\r\n               <div className=\"td item\">{isEditing ? <input type=\"text\" value={item} onChange={setItem} /> : <span>{item}</span>}</div>\r\n               <div className=\"td measurment\">{isEditing ? <input type=\"text\" value={measurment} onChange={setMeasurment} /> : <span>{measurment}</span>}</div>\r\n               <div className=\"td price\">{isEditing ? <input type=\"number\" value={price} onChange={setPrice} /> : <span>{price}</span>}</div>\r\n               <div className=\"td quantity\">{isEditing ? <input type=\"number\" value={quantity} onChange={setQuantity} /> : <span>{quantity}</span>}</div>\r\n               <div className=\"td priceWithoutVAT\"><span>{(priceWithoutVAT).toFixed(2)}</span></div>\r\n               <div className=\"td VAT\">{isEditing ? <input type=\"number\" value={VAT} onChange={setVAT} /> : <span>{VAT}</span>}</div>\r\n               <div className=\"td totalVAT\"><span>{(totalVAT).toFixed(2)}</span></div>\r\n               <div className=\"td total\"><span>{(total).toFixed(2)}</span></div>\r\n               <div className=\"td edit\">\r\n\r\n                    <IconButton onClick={calculate}>\r\n                         {isEditing ?\r\n                              <CheckSharpIcon />\r\n                              :\r\n                              <EditSharpIcon />\r\n                         }\r\n                    </IconButton>\r\n\r\n               </div>\r\n               <div className=\"td delete\">\r\n                    <IconButton onClick={handleRowRemove(id)}>\r\n                         <DeleteSharpIcon />\r\n                    </IconButton>\r\n               </div>\r\n          </div >\r\n     )\r\n}","import React from \"react\";\r\nimport \"../../style/Header&Row.css\"\r\nexport default function Header() {\r\n     return (\r\n          <div className=\"Header\">\r\n               <div className=\"td rowNum\">Ред. број</div>\r\n               <div className=\"td item\">Опис</div>\r\n               <div className=\"td measurment\">Единечна мерка</div>\r\n               <div className=\"td price\">Цена</div>\r\n               <div className=\"td quantity\">Количина</div>\r\n               <div className=\"td priceWithoutVAT\">Цена без ДДВ</div>\r\n               <div className=\"td VAT\">ДДВ</div>\r\n               <div className=\"td totalVAT\">Пресметан ДДВ</div>\r\n               <div className=\"td total\">Вкупно</div>\r\n               <div className=\"td edit\"></div>\r\n               <div className=\"td delete\"></div>\r\n          </div>\r\n     )\r\n}","import React from \"react\";\r\nimport \"../../style/Footer.css\"\r\nimport { IconButton } from \"@mui/material\";\r\nimport RefreshSharpIcon from '@mui/icons-material/RefreshSharp';\r\nimport AddCircleOutlineSharpIcon from '@mui/icons-material/AddCircleOutlineSharp';\r\nexport default function Footer({ allTotal, addRow, resetRows }) {\r\n     return (\r\n          <div className=\"Footer\">\r\n               <div className=\"reset\">\r\n                    <IconButton onClick={resetRows}>\r\n                         <RefreshSharpIcon />\r\n                    </IconButton>\r\n               </div>\r\n               <div className=\"empty\"></div>\r\n               <div className=\"allTotal\">\r\n                    <span>Вкупно: </span>\r\n                    <span>{(allTotal).toFixed(2)}</span>\r\n               </div>\r\n               <div className=\"add\">\r\n                    <IconButton onClick={addRow}>\r\n                         <AddCircleOutlineSharpIcon />\r\n                    </IconButton>\r\n               </div>\r\n          </div >\r\n     )\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Row from \"./Row\"\r\nimport Header from \"./Header\";\r\nimport \"../../style/InvoiceTable.css\"\r\nimport Footer from \"./Footer\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function InvoiceTable({ getAllTotals, products, setRowsStatus }) {\r\n     const [allTotal, setAllTotal] = useState(0)\r\n     const [allTotalVAT, setAllTotalVAT] = useState(0)\r\n     const [allTotalWithoutVAT, setAllTotalWithoutVAT] = useState(0)\r\n     const plusTotal = (allTotal, totalVAT, totalWithoutVAT) => {\r\n          setAllTotal((prev) => prev + allTotal)\r\n          setAllTotalVAT((prev) => prev + totalVAT)\r\n          setAllTotalWithoutVAT((prev) => prev + totalWithoutVAT)\r\n     }\r\n     const minusTotal = (allTotal, totalVAT, totalWithoutVAT) => {\r\n          setAllTotal((prev) => prev - allTotal)\r\n          setAllTotalVAT((prev) => prev - totalVAT)\r\n          setAllTotalWithoutVAT((prev) => prev - totalWithoutVAT)\r\n     }\r\n     const oneRow = () => {\r\n          setRows([<Row plusTotal={plusTotal} minusTotal={minusTotal} rowRemove={rowRemove} id={uuidv4()} key={uuidv4()} rowNum={1} />])\r\n     }\r\n     const rowRemove = (id) => {\r\n          setRows(rows => [...rows.filter(e => e.props.id !== id)])\r\n     }\r\n     const resetRows = () => {\r\n          setAllTotal(0)\r\n          setAllTotalVAT(0)\r\n          setAllTotalWithoutVAT(0)\r\n          setRowsStatus([])\r\n          oneRow()\r\n     }\r\n     const [rows, setRows] = useState([])\r\n\r\n     const addRow = () => {\r\n          setRows(rows => [...rows, <Row plusTotal={plusTotal} minusTotal={minusTotal} rowRemove={rowRemove} id={uuidv4()} key={uuidv4()} rowNum={rows.length + 1} />])\r\n     }\r\n\r\n     useEffect(() => {\r\n          if (products.length > 0) {\r\n               setRows(products.map((e, inx) =>\r\n                    <Row plusTotal={plusTotal}\r\n                         minusTotal={minusTotal}\r\n                         rowRemove={rowRemove}\r\n                         id={e.id}\r\n                         key={e.id}\r\n                         rowNum={inx + 1}\r\n                         dbItem={e.item}\r\n                         dbVAT={e.VAT}\r\n                         dbMeasurment={e.measurment}\r\n                         dbPrice={e.price}\r\n                         dbQuantity={e.quantity}\r\n                         dbIsEditing={false}\r\n                    />))\r\n          } else {\r\n               // setRows([<Row plusTotal={plusTotal} minusTotal={minusTotal} rowRemove={rowRemove} id={uuidv4()} key={uuidv4()} rowNum={1} />])\r\n               oneRow()\r\n          }\r\n     }, [products])\r\n     useEffect(() => {\r\n          const data = { allTotal, allTotalVAT, allTotalWithoutVAT }\r\n          getAllTotals(data)\r\n     }, [allTotal, allTotalVAT, allTotalWithoutVAT])\r\n     return (\r\n          <div className=\"InvoiceTable\">\r\n               <Header />\r\n               {rows}\r\n               <Footer addRow={addRow} allTotal={allTotal} resetRows={resetRows} />\r\n\r\n          </div>\r\n     )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport \"../../style/ClientAndInvoiceInfo.css\"\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\nimport { MobileDatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function ClientAndInvoiceInfo({ getClientAndInvoiceData, flashPopUp, fetchedInvoiceData, id }) {\r\n     const day = new Date()\r\n     const anotherDay = new Date()\r\n     const defaultPaymentDay = new Date(anotherDay.setDate(anotherDay.getDate() + 90))\r\n\r\n\r\n     const [clientName, setClientName] = useState(\"\")\r\n     const [address, setAddress] = useState(\"\")\r\n     const [tel, setTel] = useState(\"\")\r\n     const [email, setEmail] = useState(\"\")\r\n     const [invoiceNumber, setInvoiceNumber] = useState(\"\")\r\n     const [dateOfExecution, setDateOfExecution] = useState(day.toLocaleDateString('en-CA'))\r\n     const [dateOfIssuing, setDateOfIssuing] = useState(day.toLocaleDateString('en-CA'))\r\n     const [paymentDate, setPaymentDate] = useState(defaultPaymentDay.toLocaleDateString('en-CA'))\r\n\r\n     const [savedClients, setSavedClients] = useState([])\r\n     useEffect(() => {\r\n          const data = { clientName, address, tel, email, invoiceNumber, dateOfExecution, dateOfIssuing, paymentDate }\r\n          getClientAndInvoiceData(data)\r\n\r\n     }, [clientName, address, tel, email, invoiceNumber, dateOfExecution, dateOfIssuing, paymentDate])\r\n     useEffect(() => {\r\n          axios.get(\"/api/clients\")\r\n               .then(res => setSavedClients(res.data))\r\n               .catch(e => flashPopUp(\"error\", e.data.response.msg))\r\n\r\n     }, [])\r\n     useEffect(() => {\r\n          const selectedClient = savedClients.filter(e => e.name === clientName)\r\n          if (selectedClient.length > 0) {\r\n               selectedClient.map((e) => {\r\n                    setAddress(e.address)\r\n                    setTel(e.tel)\r\n                    setEmail(e.email)\r\n               })\r\n          }\r\n     }, [clientName])\r\n\r\n     useEffect(() => {\r\n          if (fetchedInvoiceData.clientInfo && fetchedInvoiceData.invoiceInfo) {\r\n               const { name, tel, email, address } = fetchedInvoiceData.clientInfo\r\n               setClientName(name)\r\n               setTel(tel)\r\n               setEmail(email)\r\n               setAddress(address)\r\n               const { invoiceNumber, executionDate, issuingDate, paymentDate } = fetchedInvoiceData.invoiceInfo\r\n               setDateOfExecution(executionDate)\r\n               setDateOfIssuing(issuingDate)\r\n               setInvoiceNumber(invoiceNumber)\r\n               setPaymentDate(paymentDate)\r\n          }\r\n     }, [fetchedInvoiceData])\r\n     const clientInfoInputStyle = { margin: \"5px 0px 5px 0px\", width: \"100%\" }\r\n     const invoiceInfoInputStyle = {\r\n          margin: \"5px 0px 5px 0px\", width: \"100%\"\r\n     }\r\n     return (\r\n          <div className=\"ClientAndInvoiceInfo\">\r\n               <div className=\"ClientInfo\">\r\n                    <Autocomplete\r\n                         onChange={(e, val) => setClientName(val)}\r\n                         value={clientName}\r\n                         freeSolo\r\n                         id=\"free-solo-2-demo\"\r\n                         disableClearable\r\n                         options={savedClients.map(e => e.name)}\r\n                         size={\"small\"} style={clientInfoInputStyle}\r\n                         renderInput={(params) => (\r\n                              <TextField type=\"text\" value={clientName} onChange={(e) => setClientName(e.target.value)}   {...params}\r\n                                   placeholder=\"Име на клиентот\"\r\n                                   InputProps={{\r\n                                        ...params.InputProps,\r\n                                   }} />\r\n                         )}\r\n                    />\r\n                    <TextField type=\"text\" size={\"small\"} style={clientInfoInputStyle} value={address} onChange={(e) => setAddress(e.target.value)} placeholder=\"Адреса\" />\r\n                    <TextField type=\"text\" className=\"clientInfoInputs\" size={\"small\"} style={clientInfoInputStyle} value={tel} onChange={(e) => setTel(e.target.value)} placeholder=\"Телефонски број\" />\r\n                    <TextField type=\"text\" className=\"clientInfoInputs\" size={\"small\"} style={clientInfoInputStyle} value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Е-маил\" />\r\n\r\n               </div>\r\n\r\n               <div className=\"InvoiceInfo\">\r\n                    <TextField type=\"text\" className=\"clientInfoInputs\" size={\"small\"} style={invoiceInfoInputStyle} value={invoiceNumber} onChange={(e) => setInvoiceNumber(e.target.value)} placeholder=\"Број на фактура\" />\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                         <MobileDatePicker\r\n                              label=\"Датум на извршен промет\"\r\n                              inputFormat=\"dd-MM-yyyy\"\r\n                              value={dateOfExecution}\r\n                              onChange={(e) => setDateOfExecution(e.toLocaleDateString('en-CA'))}\r\n                              renderInput={(params) => <TextField {...params} size={\"small\"} style={invoiceInfoInputStyle} />}\r\n                         />\r\n                         <MobileDatePicker\r\n                              label=\"Датум на издавање\"\r\n                              inputFormat=\"dd-MM-yyyy\"\r\n                              value={dateOfIssuing}\r\n                              onChange={(e) => setDateOfIssuing(e.toLocaleDateString('en-CA'))}\r\n                              renderInput={(params) => <TextField {...params} size={\"small\"} style={invoiceInfoInputStyle} />}\r\n                         />\r\n                         <MobileDatePicker\r\n                              label=\"Рок за плаќање\"\r\n                              inputFormat=\"dd-MM-yyyy\"\r\n                              value={paymentDate}\r\n                              onChange={(e) => setPaymentDate(e.toLocaleDateString('en-CA'))}\r\n                              renderInput={(params) => <TextField {...params} size={\"small\"} style={invoiceInfoInputStyle} />}\r\n                         />\r\n                    </LocalizationProvider>\r\n\r\n               </div>\r\n\r\n          </div >\r\n\r\n     )\r\n}","import React from \"react\";\r\nimport useInputControl from \"../../hooks/useInputControl\";\r\nimport \"../../style/CompanyInfo.css\"\r\nexport default function CompanyInfo({ companyInfo }) {\r\n     const { name, address, telephone, mail, bankAcc, tax, logo } = companyInfo\r\n     const [companyName, setCompanyName] = useInputControl(name)\r\n     const [companyAddress, setCompanycompanyAddress] = useInputControl(address)\r\n     const [tel, setTel] = useInputControl(telephone)\r\n     const [email, setEmail] = useInputControl(mail)\r\n     const [IBAN, setIBAN] = useInputControl(bankAcc)\r\n     const [taxNumber, setTaxNumber] = useInputControl(tax)\r\n     return (\r\n          <div className=\"CompanyInfo\">\r\n               <div className=\"InputGroup\">\r\n                    <input type=\"text\" value={companyName} onChange={setCompanyName} placeholder=\"Име на компанијата\" />\r\n                    <input type=\"text\" value={companyAddress} onChange={setCompanycompanyAddress} placeholder=\"Адреса на компанијата\" />\r\n                    <input type=\"text\" value={tel} onChange={setTel} placeholder=\"Телефонски број\" />\r\n               </div>\r\n               <div className=\"InputGroup\">\r\n                    <input type=\"text\" value={email} onChange={setEmail} placeholder=\"Е-маил\" />\r\n                    <input type=\"text\" value={IBAN} onChange={setIBAN} placeholder=\"Жиро сметка\" />\r\n                    <input type=\"text\" value={taxNumber} onChange={setTaxNumber} placeholder=\"Даночен број\" />\r\n               </div>\r\n               <div className=\"LogoDiv\">\r\n                    {logo && <img src={logo} alt=\"CompanyLogo\" className=\"Logo\" />}\r\n               </div>\r\n          </div>\r\n     )\r\n}","export default function areRowsCalculated(rowsStatus) {\r\n     const stillEditing = rowsStatus.filter(e => e.state === true)\r\n     if (rowsStatus.length === 0 || stillEditing.length > 0) {\r\n          return false\r\n     } else {\r\n          return true\r\n     }\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Context from \"../../context/Context\";\r\nimport InvoiceTable from \"./InvoiceTable\";\r\nimport ClientAndInvoiceInfo from \"./ClientAndInvoiceInfo\"\r\nimport CompanyInfo from \"./CompanyInfo\"\r\nimport \"../../style/Invoice.css\"\r\nimport { Button } from \"@mui/material\";\r\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined'\r\nimport axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\nimport areRowsCalculated from \"../../functions/areRowsCalculated\";\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport Loader from \"../../Loader\";\r\nexport default function Invoice() {\r\n     const { flashPopUp, user } = useContext(Context)\r\n     const [isLoading, setIsLoading] = useState(true)\r\n     let navigate = useNavigate()\r\n     const { id } = useParams()\r\n     const [fetchedProductsData, setFetchedProductsData] = useState([])\r\n     const [fetchedInvoiceData, setFetchedInvoiceData] = useState({})\r\n     const [allRowsData, setAllRowsData] = useState([])\r\n     const [clientAndInvoiceData, setClientAndInvoiceData] = useState(\"\")\r\n     const [allTotals, setAllTotals] = useState(\"\")\r\n     const [rowsStatus, setRowsStatus] = useState([])\r\n     const isRowEditing = (state, id) => {\r\n          const rowState = { state, id }\r\n          setRowsStatus(pre => [...pre.filter(e => e.id !== id), rowState])\r\n     }\r\n     const isRowDeleted = (id) => {\r\n          setRowsStatus(pre => [...pre.filter(e => e.id !== id)])\r\n     }\r\n\r\n     const getAllTotals = (data) => {\r\n          setAllTotals(data)\r\n     }\r\n     const getRowData = (rowData) => {\r\n          setAllRowsData([...allRowsData, rowData])\r\n     }\r\n     const removeRowData = (rowId) => {\r\n          setAllRowsData([...allRowsData.filter(e => e.id !== rowId)])\r\n     }\r\n     const getClientAndInvoiceData = (data) => {\r\n          setClientAndInvoiceData(data)\r\n     }\r\n     const saveNewInvoice = async () => {\r\n          const data = { allRowsData, allTotals, clientAndInvoiceData }\r\n          const isFinnished = areRowsCalculated(rowsStatus)\r\n          if (isFinnished) {\r\n               axios.post(\"/api/savenewinvoice\", data)\r\n                    .then(res => {\r\n                         navigate(`/invoice/${res.data.id}`)\r\n                         flashPopUp(\"success\", res.data.msg)\r\n                    })\r\n                    .catch((e) => {\r\n                         flashPopUp(\"error\", e.response.data.msg)\r\n                    })\r\n\r\n          } else {\r\n               flashPopUp(\"warning\", \"Ве молиме потврдете ги сите артикли во фактурата, или додајте артикл\")\r\n          }\r\n     }\r\n     const saveEditedInvoice = async () => {\r\n          const { _id } = fetchedInvoiceData\r\n          const data = { allRowsData, allTotals, _id, clientAndInvoiceData }\r\n          const isFinnished = areRowsCalculated(rowsStatus)\r\n          if (isFinnished) {\r\n               axios.post(\"/api/saveeditedinvoice\", data).then(res => flashPopUp(\"success\", res.data.msg))\r\n                    .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n          } else {\r\n               flashPopUp(\"warning\", \"Ве молиме потврдете ги сите артикли во фактурата, или додајте артикл\")\r\n          }\r\n     }\r\n     // const getSavedInvoice = async () => {\r\n     //      if (id) {\r\n     //           setRowsStatus([])\r\n     //           axios.get(`/api/getinvoice/${id}`)\r\n     //                .then((res) => {\r\n     //                     setFetchedProductsData(res.data.products)\r\n     //                     setFetchedInvoiceData(res.data)\r\n     //                     setRowsStatus([])\r\n     //                     setIsLoading()\r\n     //                })\r\n     //                .catch((e) => {\r\n     //                     flashPopUp(\"error\", e.response.data.msg)\r\n     //                     setIsLoading()\r\n     //                })\r\n     //      } else {\r\n     //           setIsLoading()\r\n     //      }\r\n     // }\r\n\r\n     useEffect(() => {\r\n          const getSavedInvoice = async () => {\r\n               if (id) {\r\n                    setRowsStatus([])\r\n                    axios.get(`/api/getinvoice/${id}`)\r\n                         .then((res) => {\r\n                              setFetchedProductsData(res.data.products)\r\n                              setFetchedInvoiceData(res.data)\r\n                              setRowsStatus([])\r\n                              setIsLoading(false)\r\n                         })\r\n                         .catch((e) => {\r\n                              flashPopUp(\"error\", e.response.data.msg)\r\n                              setIsLoading(false)\r\n                         })\r\n               } else {\r\n                    setIsLoading(false)\r\n               }\r\n\r\n          }\r\n          getSavedInvoice()\r\n     }, [id, flashPopUp])\r\n     const companyInfo = {\r\n          name: user.companyName, address: user.address, telephone: user.tel, mail: user.username, bankAcc: user.bankAccount, tax: user.taxNumber,\r\n          logo: user.logo.path\r\n     }\r\n     const handlePrint = () => {\r\n          const isFinnished = areRowsCalculated(rowsStatus)\r\n          if (isFinnished) {\r\n               window.print()\r\n          } else {\r\n               flashPopUp(\"warning\", \"Ве молиме потврдете ги сите артикли во фактурата, или додајте артикл\")\r\n          }\r\n     }\r\n     return (\r\n          <div className=\"Invoice\">\r\n               {isLoading ?\r\n                    <Loader />\r\n                    :\r\n                    <>\r\n                         <Context.Provider value={{ getRowData, removeRowData, companyInfo, isRowEditing, isRowDeleted }}>\r\n                              <CompanyInfo companyInfo={companyInfo} />\r\n                              <ClientAndInvoiceInfo\r\n                                   getClientAndInvoiceData={getClientAndInvoiceData}\r\n                                   flashPopUp={flashPopUp} fetchedInvoiceData={fetchedInvoiceData}\r\n                                   id={id} />\r\n                              <InvoiceTable\r\n                                   products={fetchedProductsData}\r\n                                   getAllTotals={getAllTotals}\r\n                                   setRowsStatus={setRowsStatus}\r\n                              />\r\n                         </Context.Provider>\r\n                         {id ?\r\n                              <>\r\n                                   <div className=\"BottomBtns\" >\r\n                                        <Button onClick={saveNewInvoice} variant=\"contained\" size=\"small\" color=\"success\" endIcon={<SaveOutlinedIcon />}>Зачувај како нова фактура</Button>\r\n                                        <Button onClick={handlePrint} variant=\"contained\" size=\"small\" endIcon={<PrintIcon />}>Принт</Button>\r\n                                        <Button onClick={saveEditedInvoice} variant=\"contained\" size=\"small\" color=\"secondary\" endIcon={<SaveOutlinedIcon />}>Зачувај ја промената</Button>\r\n                                   </div>\r\n\r\n                              </>\r\n                              :\r\n                              <div className=\"SaveBtnDiv\" >\r\n                                   {/* Print CSS is styled in Invoice.css */}\r\n                                   {/* <Button onClick={handlePrint} variant=\"contained\" size=\"small\" endIcon={<PrintIcon />}>Принт</Button> */}\r\n                                   <Button onClick={saveNewInvoice} variant=\"contained\" color=\"success\" className=\"button\" size=\"small\" endIcon={<SaveOutlinedIcon />}>Зачувај</Button>\r\n                              </div>\r\n                         }\r\n                    </>\r\n               }\r\n          </div >\r\n     )\r\n}\r\n","import axios from \"axios\"\r\nexport default function logout() {\r\n     axios.post(\"/api/logout\")\r\n     window.location.reload()\r\n}","import React, { useContext } from \"react\";\r\nimport { TextField, Button, Link, Typography } from \"@mui/material\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport useInputControl from \"../../hooks/useInputControl\";\r\nimport axios from \"axios\";\r\nimport Context from \"../../context/Context\";\r\nimport Flash from \"../Flash/Flash\";\r\nimport \"../../style/Verification.css\"\r\n\r\nexport default function Verification({ flash }) {\r\n     const inputStyle = {\r\n          margin: \"10px\",\r\n          width: \"100%\",\r\n          height: \"30%\",\r\n     }\r\n     const iconStyle = {\r\n          height: \"80px\",\r\n          width: \"80px\",\r\n          borderRadius: \"100%\",\r\n          boxShadow: \"1px 1px 10px -3px black\",\r\n          margin: \"10px\",\r\n          backgroundColor: \"white\"\r\n\r\n     }\r\n\r\n     const { flashPopUp, user } = useContext(Context)\r\n     const { isOn, type, msg } = flash\r\n     const [code, setCode] = useInputControl(\"\")\r\n     const verify = () => {\r\n          const data = { code: code }\r\n          axios.post(\"/api/verify\", data)\r\n               .then((res) => {\r\n                    flashPopUp(\"success\", res.data.msg)\r\n                    window.location.reload()\r\n               })\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n     const sendCodeAgain = () => {\r\n          axios.get(\"/api/sendcodeagain\")\r\n               .then((res) => {\r\n                    flashPopUp(\"success\", res.data.msg)\r\n                    window.location.reload()\r\n               })\r\n               .catch(e =>\r\n                    flashPopUp(\"error\", e.response.data.msg))\r\n\r\n     }\r\n     const logout = () => {\r\n          axios.post(\"/api/logout\")\r\n               .then((res) => {\r\n                    window.location.reload()\r\n               })\r\n               .catch(e =>\r\n                    flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n     return (\r\n\r\n          <div className=\"Verification\">\r\n               <div className=\"Flash\">\r\n                    {\r\n                         isOn &&\r\n                         <Flash type={type} msg={msg} />\r\n                    }\r\n               </div>\r\n               <div className=\"Form\">\r\n                    <AccountCircleIcon style={iconStyle} />\r\n                    <div className=\"Inputs\" style={{ width: \"30%\" }}>\r\n                         <Typography style={{ width: \"100%\" }} align=\"center\" variant=\"subtitle1\">Проверете го вашиот емаил „{user.username}“ каде ви испративме код за верификација, доколку мејлот не е во „inbox“, проверете во „spam“. Понекогаш потребно е повеќе време емаилот да биде испратен.</Typography>\r\n                         <TextField style={inputStyle} label=\"Внесете го кодот за верификација\" type=\"text\" variant=\"outlined\"\r\n                              value={code} onChange={setCode} />\r\n                         <Button style={inputStyle} variant=\"contained\" onClick={verify} >Потврди</Button>\r\n                         <Link className=\"Link\" onClick={sendCodeAgain} underline=\"none\">\r\n                              {'Испрати го кодот повторно'}\r\n                         </Link>\r\n                         <Button style={inputStyle} variant=\"outlined\" color=\"warning\" onClick={logout} >Одлогирај се</Button>\r\n\r\n                    </div>\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\n\r\n//Styling for the whole component is done in Setings.js & Settings.css except for the styling writen inline\r\n\r\nexport default function CompanyInfo({ inputsStyle, user, submit, flashPopUp }) {\r\n     const [companyName, setCompanyName] = useState(\"\")\r\n     const [address, setAddress] = useState(\"\")\r\n     const [tel, setTel] = useState(\"\")\r\n     const [bankAccount, setBankAccount] = useState(\"\")\r\n     const [taxNumber, setTaxNumber] = useState(\"\")\r\n     const [image, setImage] = useState()\r\n     const handleSubmit = () => {\r\n          const data = { companyName, address, tel, bankAccount, taxNumber }\r\n          submit(data, image)\r\n     }\r\n     const handleImageUpload = (e) => {\r\n          if (e.target.files[0]) {\r\n               if (e.target.files[0].size > 5000000) {\r\n                    flashPopUp(\"error\", \"Сликата не може да биде поголема од 5mb\")\r\n               } else if (!(e.target.files[0].type === \"image/png\" || e.target.files[0].type === \"image/jpeg\")) {\r\n                    flashPopUp(\"error\", \"Недозволен формат, дозволени се само .jpeg, .jpg и .png формат\")\r\n               } else {\r\n                    setImage(e.target.files[0])\r\n               }\r\n          }\r\n     }\r\n     useEffect(() => {\r\n\r\n          setCompanyName(user.companyName)\r\n          setAddress(user.address)\r\n          setTel(user.tel)\r\n          setBankAccount(user.bankAccount)\r\n          setTaxNumber(user.taxNumber)\r\n\r\n     }, [user])\r\n     return (\r\n          <div className=\"InputRows\">\r\n               <div className=\"InputGroups\">\r\n                    <TextField variant=\"outlined\" label=\"Име на вашата компанија\" value={companyName} onChange={(e) => setCompanyName(e.target.value)} type=\"text\" fullWidth style={inputsStyle} />\r\n                    <TextField variant=\"outlined\" label=\"Адреса\" value={address} onChange={(e) => setAddress(e.target.value)} type=\"text\" fullWidth style={inputsStyle} />\r\n                    <TextField variant=\"outlined\" label=\"Телефонски број\" value={tel} onChange={(e) => setTel(e.target.value)} type=\"text\" fullWidth style={inputsStyle} />\r\n\r\n\r\n               </div>\r\n               <div className=\"InputGroups\">\r\n                    <TextField variant=\"outlined\" label=\"Жиро сметка\" value={bankAccount} onChange={(e) => setBankAccount(e.target.value)} type=\"text\" fullWidth style={inputsStyle} />\r\n                    <TextField variant=\"outlined\" label=\"Даночен број\" value={taxNumber} onChange={(e) => setTaxNumber(e.target.value)} type=\"text\" fullWidth style={inputsStyle} />\r\n                    <div className=\"ChangeLogoInput\">\r\n                         <TextField variant=\"outlined\" fullWidth type=\"file\" onChange={handleImageUpload}\r\n                              helperText=\"Логото на вашата компанија\" style={inputsStyle} encType=\"multipart/form-data\" />\r\n\r\n                         {user.logo.path && <img src={user.logo.path} alt=\"Логото на вашата компанија\" style={{ width: \"20%\", height: \"80%\" }} />}\r\n                    </div>\r\n                    <Button variant=\"contained\" onClick={handleSubmit} fullWidth>Зачувај</Button>\r\n\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button, InputAdornment, Modal, Typography, Box } from \"@mui/material\";\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport useInputControl from \"../../hooks/useInputControl\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst modalStyle = {\r\n     position: 'absolute',\r\n     top: '50%',\r\n     left: '50%',\r\n     transform: 'translate(-50%, -50%)',\r\n     width: \"40%\",\r\n     bgcolor: 'background.paper',\r\n     border: '2px solid black',\r\n     backgroundColor: \"white\",\r\n     boxShadow: 24,\r\n     p: 4,\r\n     padding: \"5%\"\r\n};\r\nconst modalBtnsStyle = {\r\n     display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", paddingBottom: \"5px\"\r\n}\r\n\r\nexport default function UserSettings({ inputsStyle, user, flashPopUp, changePassword, changeEmail, deleteUser }) {\r\n     const navigate = useNavigate()\r\n     const [passConfirmModal, setPassConfirmModal] = useToggle(false);\r\n     const [emailConfirmModal, setEmailConfirmModal] = useToggle(false)\r\n\r\n\r\n     const [isOldPasswordVisible, setIsOldPasswordVisible] = useToggle(false)\r\n     const [isPassword1Visible, setIsPassword1Visible] = useToggle(false)\r\n     const [isPassword2Visible, setIsPassword2Visible] = useToggle(false)\r\n     const [oldPassword, setOldPassword] = useInputControl(\"\")\r\n     const [password1, setPassword1] = useInputControl(\"\")\r\n     const [password2, setPassword2] = useInputControl(\"\")\r\n     const [email, setEmail] = useState(\"\")\r\n     const cursorPointer = { cursor: \"pointer\" }\r\n\r\n     const handlePassChange = () => {\r\n          if (password1 === password2) {\r\n               changePassword(oldPassword, password1)\r\n          } else {\r\n               flashPopUp(\"error\", \"Лозинките не се совпаѓаат,обидете се повторно\")\r\n          }\r\n     }\r\n     const handleEmailChange = () => {\r\n          changeEmail(email)\r\n          navigate(0)\r\n     }\r\n     useEffect(() => {\r\n          setEmail(user.username)\r\n     }, [user])\r\n     return (\r\n\r\n          <div className=\"InputRows\">\r\n               <div className=\"InputGroups\">\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Стара лозинка\"\r\n                    type={isOldPasswordVisible ? \"text\" : \"password\"}\r\n                    fullWidth\r\n                    style={inputsStyle}\r\n                    value={oldPassword}\r\n                    onChange={setOldPassword}\r\n                    InputProps={{\r\n                         startAdornment:\r\n                              <InputAdornment position=\"start\">\r\n                              {isOldPasswordVisible ?\r\n                                   <VisibilityOffIcon\r\n                                        style={cursorPointer}\r\n                                        onClick={setIsOldPasswordVisible}\r\n                                   />\r\n                                   :\r\n                                   <RemoveRedEyeIcon\r\n                                        style={cursorPointer}\r\n                                        onClick={setIsOldPasswordVisible}\r\n                                   />\r\n                              }\r\n                         </InputAdornment>,\r\n                    }}\r\n               />\r\n                    <TextField\r\n                         variant=\"outlined\"\r\n                         label=\"Нова лозинка\"\r\n                         type={isPassword1Visible ? \"text\" : \"password\"}\r\n                         fullWidth\r\n                         style={inputsStyle}\r\n                         value={password1}\r\n                         onChange={setPassword1}\r\n                         InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">\r\n                                   {isPassword1Visible ?\r\n                                        <VisibilityOffIcon\r\n                                             style={cursorPointer}\r\n                                             onClick={setIsPassword1Visible}\r\n                                        />\r\n                                        :\r\n                                        <RemoveRedEyeIcon\r\n                                             style={cursorPointer}\r\n                                             onClick={setIsPassword1Visible}\r\n                                        />\r\n                                   }\r\n                              </InputAdornment>,\r\n                         }}\r\n                    />\r\n                    <TextField\r\n                         variant=\"outlined\"\r\n                         label=\"Повтори нова лозинка\"\r\n                         type={isPassword2Visible ? \"text\" : \"password\"}\r\n                         fullWidth\r\n                         style={inputsStyle}\r\n                         value={password2}\r\n                         onChange={setPassword2}\r\n                         InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">\r\n                                   {isPassword2Visible ?\r\n                                        <VisibilityOffIcon\r\n                                             style={cursorPointer}\r\n                                             onClick={setIsPassword2Visible}\r\n                                        />\r\n                                        :\r\n                                        <RemoveRedEyeIcon\r\n                                             style={cursorPointer}\r\n                                             onClick={setIsPassword2Visible}\r\n                                        />\r\n                                   }\r\n                              </InputAdornment>,\r\n                         }}\r\n                    />\r\n                    <Button variant=\"contained\" fullWidth onClick={handlePassChange}>Промени лозинка</Button>\r\n               </div>\r\n               <div className=\"InputGroups EmailAndUserDelete\" >\r\n                    <div className=\"ChangeEmailDiv\">\r\n                         <TextField\r\n                              variant=\"outlined\"\r\n                              label=\"Емаил\"\r\n                              type=\"text\"\r\n                              fullWidth\r\n                              style={inputsStyle}\r\n                              value={email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                         />\r\n                         <Button variant=\"contained\" fullWidth onClick={setEmailConfirmModal}>Промени емаил</Button>\r\n                         <Modal open={emailConfirmModal}>\r\n                              <Box style={modalStyle}>\r\n                                   <Typography\r\n                                        variant=\"button\">\r\n                                        Доколку продолжете со промена на емаилот, ќе треба да го верификувате вашиот нов емаил. дали сте сигурни дека сакате да продолжете?\r\n                                   </Typography>\r\n                                   <div style={modalBtnsStyle}>\r\n                                        <Button\r\n                                             variant=\"outlined\"\r\n                                             onClick={handleEmailChange}>\r\n                                             ДА\r\n                                        </Button>\r\n                                        <Button\r\n                                             variant=\"contained\" onClick={setEmailConfirmModal}>\r\n                                             НЕ\r\n                                        </Button>\r\n                                   </div>\r\n\r\n                              </Box>\r\n                         </Modal>\r\n\r\n                    </div>\r\n                    <div className=\"DeleteBtnDiv\">\r\n                         <Button variant=\"contained\" fullWidth onClick={setPassConfirmModal}>\r\n                              Избриши го профилот\r\n                         </Button>\r\n                         <Modal open={passConfirmModal}>\r\n                              <Box style={modalStyle}>\r\n                                   <Typography\r\n                                        variant=\"button\">\r\n                                        Со бришење на вашиот профил, сите ваши фактури и клиенти ќе бидат избришани од системот, дали сте сигурни дека сакате да продолжете?\r\n                                   </Typography>\r\n                                   <div style={modalBtnsStyle}>\r\n                                        <Button\r\n                                             variant=\"outlined\"\r\n                                             onClick={deleteUser}>\r\n                                             ДА\r\n                                        </Button>\r\n                                        <Button\r\n                                             variant=\"contained\" onClick={setPassConfirmModal}>\r\n                                             НЕ\r\n                                        </Button>\r\n                                   </div>\r\n\r\n                              </Box>\r\n                         </Modal>\r\n                    </div>\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport Context from \"../../context/Context\";\r\nimport \"../../style/Settings.css\"\r\nimport { ButtonGroup, Button } from \"@mui/material\";\r\nimport CompanyInfo from \"./CompanyInfo\"\r\nimport axios from \"axios\";\r\nimport UserSettings from \"./UserSettings\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function Settings() {\r\n     const navigate = useNavigate()\r\n     const [isItInfo, setIsItInfo] = useState(true)\r\n     const { flashPopUp, user, changeUserData } = useContext(Context)\r\n     const inputsStyle = {\r\n          margin: \"5px\"\r\n     }\r\n\r\n     const companyInfoSubmit = (data, img) => {\r\n          const config = {\r\n               headers: {\r\n                    'content-type': 'multipart/form-data'\r\n               }\r\n          }\r\n          axios.post(`/api/addimage/${user._id}`, { image: img }, config)\r\n          axios.post(`/api/companyinfo/${user._id}`, { data: data })\r\n               .then(res => {\r\n                    flashPopUp(\"success\", res.data.msg)\r\n               })\r\n               .catch(e => {\r\n                    flashPopUp(\"error\", e.reponse.data.msg)\r\n               })\r\n          changeUserData()\r\n     }\r\n     const changePassword = (oldPass, newPass) => {\r\n          const data = { oldPass, newPass }\r\n          axios.post(`/api/changepass/${user._id}`, data)\r\n               .then(res => flashPopUp(\"success\", res.data.msg))\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n     const changeEmail = (newEmail) => {\r\n          const data = { email: newEmail }\r\n          axios.post(`/api/changeemail/${user._id}`, data)\r\n               .then(res => flashPopUp(\"success\", res.data.msg))\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n\r\n     const deleteUser = () => {\r\n          axios.post(`/api/deleteuser/${user._id}`)\r\n               .then((res) => {\r\n                    flashPopUp(\"success\", res.data.msg)\r\n                    navigate(0)\r\n               })\r\n               .catch(e => flashPopUp(\"error\", e.response.data.msg))\r\n     }\r\n\r\n     function changePassAndEmail(e) {\r\n          setIsItInfo(false)\r\n     }\r\n     function changeCompanyInfo() {\r\n          setIsItInfo(true)\r\n     }\r\n\r\n     return (\r\n          <div className=\"Settings\">\r\n               <ButtonGroup variant=\"contained\"\r\n                    style={{ width: \"80%\" }} fullWidth\r\n                    aria-label=\"outlined primary button group\">\r\n                    <Button style={{ backgroundColor: isItInfo ? \"#FFC101\" : \"#1976D2\" }} onClick={changeCompanyInfo}>Податоци за компанијата</Button>\r\n                    <Button style={{ backgroundColor: !isItInfo ? \"#FFC101\" : \"#1976D2\" }} onClick={changePassAndEmail}>Промени лозинка и емаил</Button>\r\n               </ButtonGroup>\r\n               {\r\n                    isItInfo ?\r\n                         <CompanyInfo\r\n                              inputsStyle={inputsStyle}\r\n                              user={user}\r\n                              submit={companyInfoSubmit}\r\n                              flashPopUp={flashPopUp}\r\n                         />\r\n                         :\r\n                         <UserSettings\r\n                              inputsStyle={inputsStyle}\r\n                              user={user}\r\n                              flashPopUp={flashPopUp}\r\n                              changePassword={changePassword}\r\n                              changeEmail={changeEmail}\r\n                              deleteUser={deleteUser}\r\n                         />\r\n               }\r\n          </div >\r\n     )\r\n}","import { Typography, Link } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \".././style/PageFooter.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AtanasovLogo from \"../images/AtanasovLogoWhite.png\"\r\nexport default function PageFooter() {\r\n     const style = { textDecoration: \"none\", color: \"white\", fontSize: \"0.6em\" }\r\n\r\n     return (\r\n          <div className=\"PageFooter\">\r\n               <div className=\"Content\">\r\n                    <div className=\"DevelopedByDiv\">\r\n                         <Typography variant=\"button\" style={style}>\r\n                              Developed by\r\n                         </Typography>\r\n                         <Link\r\n                              href=\"https://www.atanasov.fi\" target=\"_blank\"\r\n                              varian=\"button\"\r\n                              style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                              <img src={AtanasovLogo} className=\"AtanasovFooterLogo\" alt=\"Atanasov Logo\" />\r\n                         </Link>\r\n                    </div>\r\n                    <Typography\r\n                         component={NavLink}\r\n                         to=\"/usagepolicy\"\r\n                         varian=\"button\"\r\n                         style={style}>\r\n                         Политика за користење\r\n                    </Typography>\r\n               </div>\r\n          </div >\r\n     )\r\n}","import React from \"react\";\r\nimport { Typography, Link } from \"@mui/material\";\r\n\r\nexport default function UsagePolicy() {\r\n     const style = { width: \"80%\", display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", justifyContent: \"center\" }\r\n     const textStyle = { paddingTop: \"5px\", paddingBottom: \"5px\" }\r\n     return (\r\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n               <div style={style}>\r\n                    <Typography variant=\"h5\">\r\n                         Политика за користење на апликацијата\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" style={textStyle}>\r\n                         <p>1. Invoice е отворен проект, и кодот за истиот можете да го најдете овде: <Link target=\" _blank\" href=\"https://github.com/stefanatanasovmk/faktura\">линк</Link>.</p>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" style={textStyle}>\r\n                         <p>2. Invoice е личен проект работен во слободно време со цел подобро да се разберат технологиите како React, ExpressJS, MongoDB, MUI и слични.</p>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" style={textStyle}>\r\n                         <p>3. Invoice не гарантира за безбедноста на вашите лични податоци и тие на вашата компанија. Ова е бесплатен сервис, изработен волонтерски и не гарантира дека податоците што ги внесувате во софтверот се 100% безбедни.</p>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" style={textStyle}>\r\n                         <p>4. Со користење на овој софтвер, се согласувате дека сте ја прочитале и разбрале „Политиката за користење“ и се согласувате со истата.</p>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" style={textStyle}>\r\n                         <p>- Доколку имате прашања или идеи за подобрување на софтерот ве молам контактирајте ме на мојот емаил atanasovstefan@hotmail.com</p>\r\n                    </Typography>\r\n               </div>\r\n          </div >\r\n     )\r\n}","import React from \"react\";\r\nimport \"./ErrorPage.css\"\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nexport default function ErrorPage() {\r\n     return (\r\n          <div className=\"ErrorPage\">\r\n               <div className=\"ErrorDiv\">\r\n                    <Typography variant=\"h1\">404</Typography>\r\n                    <Typography variant=\"button\">Овде нема што да се види...</Typography>\r\n                    <Button component={NavLink} to=\"/\" variant=\"contained\">Ела си на почетна</Button>\r\n               </div>\r\n          </div>\r\n     )\r\n}","import React, { useContext, useState } from \"react\";\r\nimport Context from \"../context/Context\";\r\nimport \"../style/NavBar.css\"\r\nimport { Avatar, Button, ListItemIcon, ListItemText, Typography } from '@mui/material';\r\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\r\nimport PostAddSharpIcon from '@mui/icons-material/PostAddSharp';\r\nimport ExitToAppSharpIcon from '@mui/icons-material/ExitToAppSharp';\r\nimport ReceiptSharpIcon from '@mui/icons-material/ReceiptSharp';\r\nimport { BrowserRouter as Router, Routes, Route, NavLink } from 'react-router-dom';\r\nimport Home from './Home/Home';\r\nimport Invoice from \"./Invoice/Invoice\"\r\nimport LoginSignup from './LoginSignup/LoginSignup';\r\nimport logout from \"../functions/logout\"\r\nimport Flash from './Flash/Flash';\r\nimport Verification from \"./Verification/Verification\"\r\nimport Settings from \"./Settings/Settings\"\r\nimport PageFooter from \"./PageFooter\"\r\nimport UsagePolicy from \"./UsagePolicy/UsagePolicy\";\r\nimport ErrorPage from \"./404/ErrorPage\"\r\nimport logo from \"../images/logo.png\"\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { Menu, MenuItem } from \"@mui/material\";\r\nexport default function NavBar({ flash }) {\r\n     const { isOn, type, msg } = flash\r\n     const { user } = useContext(Context)\r\n     const btnStyle = { width: \"20%\", height: \"80%\", }\r\n\r\n     // Hamburger menu code taken from MUI\r\n     const [anchorEl, setAnchorEl] = useState(null);\r\n     const open = Boolean(anchorEl);\r\n     const handleClick = (event) => {\r\n          setAnchorEl(event.currentTarget);\r\n     };\r\n     const handleClose = () => {\r\n          setAnchorEl(null);\r\n     };\r\n     return (\r\n          <>\r\n               <Router>\r\n                    <div className='NavBar'>\r\n                         <div className=\"HamburgerMenu\">\r\n                              <MenuIcon\r\n                                   id=\"basic-button\"\r\n                                   aria-controls={open ? 'basic-menu' : undefined}\r\n                                   aria-haspopup=\"true\"\r\n                                   aria-expanded={open ? true : undefined}\r\n                                   onClick={handleClick}\r\n                                   className=\"HamburgerMenuIcon\"\r\n                              />\r\n                              <Menu\r\n                                   id=\"basic-menu\"\r\n                                   anchorEl={anchorEl}\r\n                                   open={open}\r\n                                   onClose={handleClose}\r\n                                   MenuListProps={{\r\n                                        'aria-labelledby': 'basic-button',\r\n                                   }}\r\n                              >\r\n                                   <MenuItem component={NavLink} onClick={handleClose} to=\"/\">\r\n                                        <ListItemIcon><ReceiptSharpIcon /></ListItemIcon>\r\n                                        <ListItemText>Мои фактури</ListItemText>\r\n                                   </MenuItem>\r\n                                   <MenuItem component={NavLink} onClick={handleClose} to=\"/invoice\">\r\n                                        <ListItemIcon><PostAddSharpIcon /></ListItemIcon>\r\n                                        <ListItemText>Нова фактура</ListItemText>\r\n                                   </MenuItem>\r\n                                   <MenuItem component={NavLink} onClick={handleClose} to=\"/settings\">\r\n                                        <ListItemIcon><AccountCircleSharpIcon /></ListItemIcon>\r\n                                        <ListItemText>Поставки</ListItemText>\r\n                                   </MenuItem>\r\n                                   <MenuItem onClick={logout}>\r\n                                        <ListItemIcon><ExitToAppSharpIcon /></ListItemIcon>\r\n                                        <ListItemText>Одјави се</ListItemText>\r\n                                   </MenuItem>\r\n                              </Menu>\r\n\r\n                         </div>\r\n                         <div className='Logo'>\r\n                              {/* <Typography component={NavLink} to=\"/\" varian=\"button\" style={{ textDecoration: \"none\", color: \"black\", fontSize: \"1.5rem\", fontFamili: \"roboto\" }} fontSize={\"1.5rem\"}>invoice</Typography> */}\r\n                              <NavLink to=\"/\"><img src={logo} height=\"50px\" alt=\"logo\" /></NavLink>\r\n                         </div>\r\n                         <div className='NavLink'>\r\n\r\n                              <Button component={NavLink} to=\"/\" variant=\"outlined\" style={btnStyle} size=\"small\" startIcon={<ReceiptSharpIcon />}>\r\n                                   <Typography noWrap fontSize={\"0.9em\"} align=\"center\">Мои фактури</Typography>\r\n                              </Button>\r\n\r\n\r\n\r\n                              <Button variant=\"outlined\" style={btnStyle} size=\"small\" component={NavLink} to=\"/invoice\" startIcon={<PostAddSharpIcon />}>\r\n                                   <Typography noWrap fontSize={\"0.9em\"} align=\"center\">Нова фактура</Typography>\r\n                              </Button>\r\n\r\n                              <Button variant=\"outlined\" style={btnStyle} size=\"small\" component={NavLink} to=\"/settings\" startIcon={<AccountCircleSharpIcon />}>\r\n                                   <Typography noWrap fontSize={\"0.9em\"} align=\"center\">Поставки</Typography>\r\n                              </Button>\r\n\r\n                              <Button onClick={logout} variant=\"outlined\" style={btnStyle} size=\"small\" startIcon={<ExitToAppSharpIcon />}>\r\n                                   <Typography noWrap fontSize={\"0.9em\"} align=\"center\">Одјави се</Typography>\r\n                              </Button>\r\n\r\n\r\n                         </div >\r\n                         <Avatar component={NavLink} to=\"/settings\" alt=\"company logo\" src={user.logo.path} />\r\n                    </div>\r\n\r\n\r\n                    <div className='Flash'>\r\n                         {isOn &&\r\n                              <Flash type={type} msg={msg} />\r\n                         }\r\n                    </div>\r\n\r\n                    <Routes>\r\n                         <Route path=\"/\" element={<Home />} />\r\n                         <Route path=\"/invoice\" element={<Invoice />} />\r\n                         <Route path=\"/invoice/:id\" element={<Invoice />} />\r\n                         <Route path=\"/settings\" element={<Settings />} />\r\n                         <Route path=\"/loginsignup\" element={<LoginSignup />} />\r\n                         <Route path=\"/verify\" element={<Verification />} />\r\n                         <Route path=\"/usagepolicy\" element={<UsagePolicy />} />\r\n                         <Route path=\"*\" element={<ErrorPage />} />\r\n                    </Routes>\r\n                    <PageFooter />\r\n               </Router >\r\n\r\n\r\n          </>\r\n\r\n     )\r\n\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport LoginSignup from \"./components/LoginSignup/LoginSignup\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Context from \"./context/Context\";\r\nimport \"./style/App.css\"\r\nimport Verification from \"./components/Verification/Verification\"\r\nfunction App() {\r\n  //to know when to fetch updated data from the server\r\n  const [isUserDataUpdated, setIsUserDataUpdated] = useState({ status: \"no\" })\r\n  const changeUserData = () => {\r\n    setIsUserDataUpdated({ status: \"yes\" })\r\n    setTimeout(() => {\r\n      setIsUserDataUpdated({ status: \"no\" })\r\n\r\n    }, 5000)\r\n  }\r\n  //Flash state \r\n  const [flashIsOnTypeMsg, setFlash] = useState({ isOn: false, type: \"\", msg: \"\" })\r\n  //Flash global function is used in Context in every component and it's displayed in NavBar & LoginSignup components\r\n  const flashPopUp = useCallback((type, msg) => {\r\n    setFlash({ isOn: true, type: type, msg: msg })\r\n    setTimeout(() => {\r\n      setFlash({ isOn: false, type: \"\", msg: \"\" })\r\n    }, 5000)\r\n  }, [])\r\n  //User state & control\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const [user, setUser] = useState({})\r\n\r\n  useEffect(() => {\r\n    async function fetchUserStatusAndData() {\r\n      axios.get(\"/api/isauthenticated\")\r\n        .then((res) => {\r\n          setIsAuthenticated(res.data.status)\r\n          if (res.data.status) {\r\n            setUser(res.data.user)\r\n          }\r\n        })\r\n        .catch(e => flashPopUp(\"error\", \"Проблеми со серверот, ве молиме обидете се повторно.\"))\r\n    }\r\n    fetchUserStatusAndData()\r\n  }, [isUserDataUpdated], [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Context.Provider value={{ isAuthenticated, user, flashPopUp, changeUserData }}>\r\n        {\r\n          isAuthenticated ?\r\n            user.verified ?\r\n              <NavBar isVerified={user.verified} isAuthenticated={isAuthenticated} flash={flashIsOnTypeMsg} />\r\n              :\r\n              <Verification flash={flashIsOnTypeMsg} />\r\n            :\r\n            <LoginSignup flash={flashIsOnTypeMsg} />\r\n        }\r\n      </Context.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}